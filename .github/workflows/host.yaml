# name: deploy-host-app

# on:
#   push:
#     branches: ['main']
#     paths: host/**

# defaults:
#   run:
#     working-directory: host

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [21.x]

#     steps:
#       - uses: actions/checkout@v3

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Build
#         run: |
#           npm install
#           npm run build
#         env:
#           REMOTE_APP_DOMAIN: ${{ secrets.REMOTE_APP_DOMAIN }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Deploy resources
#         run: aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET_NAME }}/host/latest

#       - name: Set no max-edge for index.html
#         run: aws s3 cp s3://${{ secrets.AWS_S3_BUCKET_NAME }}/host/latest/index.html s3://${{ secrets.AWS_S3_BUCKET_NAME }}/host/latest/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type "text/html"

#       - name: Invalidate cache
#         run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --path "/host/latest/index.html"
